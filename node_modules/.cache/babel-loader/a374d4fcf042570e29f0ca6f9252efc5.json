{"ast":null,"code":"var _jsxFileName = \"/Users/sylvest/Projects/TodoList/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        // this is a turnary operatior. \n        //If true use line-through, if false use none\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none',\n        backgroundColor: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted'\n      };\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), \" \", ' ', title, /*#__PURE__*/React.createElement(\"button\", {\n      style: btnStyle,\n      onClick: this.props.delTodo.bind(this, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"x\")));\n  }\n\n} //PropTypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}; //To have fixed CSS styling \n\nconst itemStyle = {\n  backgroundColor: '#f4f4f4'\n}; //css styling for x button\n\nconst btnStyle = {\n  backgroundColor: '#20A4F3',\n  color: '#ffffff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};","map":{"version":3,"sources":["/Users/sylvest/Projects/TodoList/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","textDecoration","props","todo","completed","backgroundColor","padding","borderBottom","render","id","title","markComplete","bind","btnStyle","delTodo","propTypes","object","isRequired","itemStyle","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAG5CG,QAH4C,GAGjC,MAAM;AACb,aAAO;AACH;AACA;AACAC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAChB,cADgB,GACC,MAJd;AAKHC,QAAAA,eAAe,EAAE,SALd;AAMHC,QAAAA,OAAO,EAAE,MANN;AAOHC,QAAAA,YAAY,EAAE;AAPX,OAAP;AAUH,KAd2C;AAAA;;AAgB5CC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgB,KAAKR,KAAL,CAAWC,IAAjC;AACA,wBACI;AAAK,MAAA,KAAK,EAAE,KAAKH,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWS,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACgF,GADhF,EAEKC,KAFL,eAII;AAAQ,MAAA,KAAK,EAAEG,QAAf;AAAyB,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAAX,CAAmBF,IAAnB,CAAwB,IAAxB,EAA8BH,EAA9B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADA,CADJ;AAUH;;AA5B2C,C,CA+BhD;;AACAV,QAAQ,CAACgB,SAAT,GAAqB;AACjBZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MAAV,CAAiBC;AADN,CAArB,C,CAIA;;AACA,MAAMC,SAAS,GAAG;AACdb,EAAAA,eAAe,EAAE;AADH,CAAlB,C,CAGA;;AACA,MAAMQ,QAAQ,GAAG;AACbR,EAAAA,eAAe,EAAE,SADJ;AAEbc,EAAAA,KAAK,EAAE,SAFM;AAGbC,EAAAA,MAAM,EAAE,MAHK;AAIbd,EAAAA,OAAO,EAAE,SAJI;AAKbe,EAAAA,YAAY,EAAE,KALD;AAMbC,EAAAA,MAAM,EAAE,SANK;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAjB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TodoItem extends Component {\n\n    /* Function within the class to set dynamic style */\n    getStyle = () => {\n        return {\n            // this is a turnary operatior. \n            //If true use line-through, if false use none\n            textDecoration: this.props.todo.completed ? \n            'line-through' : 'none',\n            backgroundColor: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted'\n\n        }\n    }\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n            <p>\n                <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {' '}\n                {title}\n                {/* button for deleting todo list*/}\n                <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>x</button>\n            </p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\n//To have fixed CSS styling \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n//css styling for x button\nconst btnStyle = {\n    backgroundColor: '#20A4F3',\n    color: '#ffffff',\n    border: 'none',\n    padding: '5px 9px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}"]},"metadata":{},"sourceType":"module"}